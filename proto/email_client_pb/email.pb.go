// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/email.proto

package email_client_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmailConfig_Protocol int32

const (
	EmailConfig_SMTP EmailConfig_Protocol = 0 // SMTP协议，用于发送邮件
	EmailConfig_POP3 EmailConfig_Protocol = 1 // POP3协议，用于接收邮件
	EmailConfig_IMAP EmailConfig_Protocol = 2 // IMAP协议，用于接收邮件
)

// Enum value maps for EmailConfig_Protocol.
var (
	EmailConfig_Protocol_name = map[int32]string{
		0: "SMTP",
		1: "POP3",
		2: "IMAP",
	}
	EmailConfig_Protocol_value = map[string]int32{
		"SMTP": 0,
		"POP3": 1,
		"IMAP": 2,
	}
)

func (x EmailConfig_Protocol) Enum() *EmailConfig_Protocol {
	p := new(EmailConfig_Protocol)
	*p = x
	return p
}

func (x EmailConfig_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmailConfig_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_email_proto_enumTypes[0].Descriptor()
}

func (EmailConfig_Protocol) Type() protoreflect.EnumType {
	return &file_proto_email_proto_enumTypes[0]
}

func (x EmailConfig_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmailConfig_Protocol.Descriptor instead.
func (EmailConfig_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{2, 0}
}

// Attachment 代表一个邮件附件
type Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                          // 附件文件名
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                            // 附件内容
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // 内容类型(MIME类型)
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                 // 附件大小(字节)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_proto_email_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Attachment) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Attachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Attachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// Email 代表一封邮件的结构
type Email struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                          // 邮件标题
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                      // 邮件内容
	From          string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                            // 发件人地址
	To            []string               `protobuf:"bytes,4,rep,name=to,proto3" json:"to,omitempty"`                                // 收件人地址列表
	Id            string                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`                                // 邮件唯一ID
	SentAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`          // 邮件发送时间
	Attachments   []*Attachment          `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`              // 邮件附件列表
	EmailType     string                 `protobuf:"bytes,8,opt,name=email_type,json=emailType,proto3" json:"email_type,omitempty"` // 邮件类型: normal或test
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Email) Reset() {
	*x = Email{}
	mi := &file_proto_email_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{1}
}

func (x *Email) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Email) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Email) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Email) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Email) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Email) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *Email) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Email) GetEmailType() string {
	if x != nil {
		return x.EmailType
	}
	return ""
}

// EmailConfig 代表邮件服务器配置
type EmailConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                              // 配置唯一ID
	Protocol      EmailConfig_Protocol   `protobuf:"varint,2,opt,name=protocol,proto3,enum=email.EmailConfig_Protocol" json:"protocol,omitempty"` // 邮件协议类型
	Server        string                 `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`                                      // 邮件服务器地址
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`                                         // 邮件服务器端口
	UseSsl        bool                   `protobuf:"varint,5,opt,name=use_ssl,json=useSsl,proto3" json:"use_ssl,omitempty"`                       // 是否使用SSL加密连接
	Username      string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`                                  // 登录用户名
	Password      string                 `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`                                  // 登录密码
	Timeout       int32                  `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`                                   // 连接超时时间（秒）
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               // 配置创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`              // 配置更新时间
	Name          string                 `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`                                         // 配置名称，用于标识
	Description   string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`                           // 配置描述，说明用途或详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailConfig) Reset() {
	*x = EmailConfig{}
	mi := &file_proto_email_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailConfig) ProtoMessage() {}

func (x *EmailConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailConfig.ProtoReflect.Descriptor instead.
func (*EmailConfig) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{2}
}

func (x *EmailConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailConfig) GetProtocol() EmailConfig_Protocol {
	if x != nil {
		return x.Protocol
	}
	return EmailConfig_SMTP
}

func (x *EmailConfig) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *EmailConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *EmailConfig) GetUseSsl() bool {
	if x != nil {
		return x.UseSsl
	}
	return false
}

func (x *EmailConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *EmailConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EmailConfig) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *EmailConfig) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EmailConfig) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EmailConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmailConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// CreateConfigRequest 创建邮件配置的请求
type CreateConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *EmailConfig           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"` // 待创建的邮件配置信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConfigRequest) Reset() {
	*x = CreateConfigRequest{}
	mi := &file_proto_email_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigRequest) ProtoMessage() {}

func (x *CreateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{3}
}

func (x *CreateConfigRequest) GetConfig() *EmailConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// GetConfigRequest 获取邮件配置的请求
type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 待查询的配置ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_proto_email_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{4}
}

func (x *GetConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// UpdateConfigRequest 更新邮件配置的请求
type UpdateConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *EmailConfig           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"` // 待更新的邮件配置信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfigRequest) Reset() {
	*x = UpdateConfigRequest{}
	mi := &file_proto_email_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigRequest) ProtoMessage() {}

func (x *UpdateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateConfigRequest) GetConfig() *EmailConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// DeleteConfigRequest 删除邮件配置的请求
type DeleteConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 待删除的配置ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConfigRequest) Reset() {
	*x = DeleteConfigRequest{}
	mi := &file_proto_email_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigRequest) ProtoMessage() {}

func (x *DeleteConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteConfigResponse 删除邮件配置的响应
type DeleteConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否删除成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 操作结果提示信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConfigResponse) Reset() {
	*x = DeleteConfigResponse{}
	mi := &file_proto_email_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigResponse) ProtoMessage() {}

func (x *DeleteConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ConfigResponse 邮件配置操作的通用响应
type ConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 操作结果提示信息
	Config        *EmailConfig           `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`    // 相关的邮件配置信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	mi := &file_proto_email_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfigResponse) GetConfig() *EmailConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// ListConfigsRequest 获取邮件配置列表的请求
type ListConfigsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"` // 游标，用于分页查询。为空表示从最新开始查询
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`  // 返回记录数限制，默认20，最大50
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConfigsRequest) Reset() {
	*x = ListConfigsRequest{}
	mi := &file_proto_email_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigsRequest) ProtoMessage() {}

func (x *ListConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListConfigsRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{9}
}

func (x *ListConfigsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListConfigsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ListConfigsResponse 获取邮件配置列表的响应
type ListConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Configs       []*EmailConfig         `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`                         // 配置列表
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // 下一页的游标，为空表示没有更多数据
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`         // 是否还有更多数据
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`                            // 总记录数（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConfigsResponse) Reset() {
	*x = ListConfigsResponse{}
	mi := &file_proto_email_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigsResponse) ProtoMessage() {}

func (x *ListConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListConfigsResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{10}
}

func (x *ListConfigsResponse) GetConfigs() []*EmailConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *ListConfigsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListConfigsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListConfigsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// TestConfigRequest 测试邮件配置的请求
type TestConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *EmailConfig           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"` // 待测试的邮件配置信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestConfigRequest) Reset() {
	*x = TestConfigRequest{}
	mi := &file_proto_email_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConfigRequest) ProtoMessage() {}

func (x *TestConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConfigRequest.ProtoReflect.Descriptor instead.
func (*TestConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{11}
}

func (x *TestConfigRequest) GetConfig() *EmailConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// TestConfigResponse 测试邮件配置的响应
type TestConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 测试是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 测试结果详细说明
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestConfigResponse) Reset() {
	*x = TestConfigResponse{}
	mi := &file_proto_email_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConfigResponse) ProtoMessage() {}

func (x *TestConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConfigResponse.ProtoReflect.Descriptor instead.
func (*TestConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{12}
}

func (x *TestConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetSentEmailsRequest 获取已发送邮件列表的请求
type GetSentEmailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`                        // 游标，用于分页查询。为空表示从最新开始查询
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                         // 返回记录数限制，默认20，最大100
	EmailType     string                 `protobuf:"bytes,3,opt,name=email_type,json=emailType,proto3" json:"email_type,omitempty"` // 邮件类型过滤，为空表示所有类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSentEmailsRequest) Reset() {
	*x = GetSentEmailsRequest{}
	mi := &file_proto_email_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSentEmailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSentEmailsRequest) ProtoMessage() {}

func (x *GetSentEmailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSentEmailsRequest.ProtoReflect.Descriptor instead.
func (*GetSentEmailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{13}
}

func (x *GetSentEmailsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetSentEmailsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSentEmailsRequest) GetEmailType() string {
	if x != nil {
		return x.EmailType
	}
	return ""
}

// GetSentEmailsResponse 获取已发送邮件列表的响应
type GetSentEmailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Emails        []*Email               `protobuf:"bytes,1,rep,name=emails,proto3" json:"emails,omitempty"`                           // 已发送邮件列表
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // 下一页的游标，为空表示没有更多数据
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`         // 是否还有更多数据
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`                            // 总记录数（可选，性能考虑可能不返回）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSentEmailsResponse) Reset() {
	*x = GetSentEmailsResponse{}
	mi := &file_proto_email_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSentEmailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSentEmailsResponse) ProtoMessage() {}

func (x *GetSentEmailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSentEmailsResponse.ProtoReflect.Descriptor instead.
func (*GetSentEmailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{14}
}

func (x *GetSentEmailsResponse) GetEmails() []*Email {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *GetSentEmailsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetSentEmailsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetSentEmailsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// SendEmailRequest 发送单封邮件的请求
type SendEmailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         *Email                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`                       // 待发送的邮件信息
	ConfigId      string                 `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"` // 使用的邮件配置ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailRequest) Reset() {
	*x = SendEmailRequest{}
	mi := &file_proto_email_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailRequest) ProtoMessage() {}

func (x *SendEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailRequest.ProtoReflect.Descriptor instead.
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{15}
}

func (x *SendEmailRequest) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *SendEmailRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

// SendEmailResponse 发送单封邮件的响应
type SendEmailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`               // 是否发送成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                // 发送结果提示信息
	EmailId       string                 `protobuf:"bytes,3,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"` // 发送成功后的邮件ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailResponse) Reset() {
	*x = SendEmailResponse{}
	mi := &file_proto_email_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailResponse) ProtoMessage() {}

func (x *SendEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailResponse.ProtoReflect.Descriptor instead.
func (*SendEmailResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{16}
}

func (x *SendEmailResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendEmailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendEmailResponse) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

// SendEmailsRequest 批量发送邮件的请求
type SendEmailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Emails        []*Email               `protobuf:"bytes,1,rep,name=emails,proto3" json:"emails,omitempty"`                     // 待发送的邮件列表
	ConfigId      string                 `protobuf:"bytes,2,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"` // 使用的邮件配置ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailsRequest) Reset() {
	*x = SendEmailsRequest{}
	mi := &file_proto_email_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailsRequest) ProtoMessage() {}

func (x *SendEmailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailsRequest.ProtoReflect.Descriptor instead.
func (*SendEmailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{17}
}

func (x *SendEmailsRequest) GetEmails() []*Email {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *SendEmailsRequest) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

// SendEmailsResponse 批量发送邮件的响应
type SendEmailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                  // 是否全部发送成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                   // 发送结果提示信息
	EmailIds      []string               `protobuf:"bytes,3,rep,name=email_ids,json=emailIds,proto3" json:"email_ids,omitempty"` // 发送成功的邮件ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailsResponse) Reset() {
	*x = SendEmailsResponse{}
	mi := &file_proto_email_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailsResponse) ProtoMessage() {}

func (x *SendEmailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_email_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailsResponse.ProtoReflect.Descriptor instead.
func (*SendEmailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_email_proto_rawDescGZIP(), []int{18}
}

func (x *SendEmailsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendEmailsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendEmailsResponse) GetEmailIds() []string {
	if x != nil {
		return x.EmailIds
	}
	return nil
}

var File_proto_email_proto protoreflect.FileDescriptor

const file_proto_email_proto_rawDesc = "" +
	"\n" +
	"\x11proto/email.proto\x12\x05email\x1a\x1fgoogle/protobuf/timestamp.proto\"y\n" +
	"\n" +
	"Attachment\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"\xf4\x01\n" +
	"\x05Email\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12\x12\n" +
	"\x04from\x18\x03 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x04 \x03(\tR\x02to\x12\x0e\n" +
	"\x02id\x18\x05 \x01(\tR\x02id\x123\n" +
	"\asent_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x06sentAt\x123\n" +
	"\vattachments\x18\a \x03(\v2\x11.email.AttachmentR\vattachments\x12\x1d\n" +
	"\n" +
	"email_type\x18\b \x01(\tR\temailType\"\xc3\x03\n" +
	"\vEmailConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x127\n" +
	"\bprotocol\x18\x02 \x01(\x0e2\x1b.email.EmailConfig.ProtocolR\bprotocol\x12\x16\n" +
	"\x06server\x18\x03 \x01(\tR\x06server\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x17\n" +
	"\ause_ssl\x18\x05 \x01(\bR\x06useSsl\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpassword\x12\x18\n" +
	"\atimeout\x18\b \x01(\x05R\atimeout\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\"(\n" +
	"\bProtocol\x12\b\n" +
	"\x04SMTP\x10\x00\x12\b\n" +
	"\x04POP3\x10\x01\x12\b\n" +
	"\x04IMAP\x10\x02\"A\n" +
	"\x13CreateConfigRequest\x12*\n" +
	"\x06config\x18\x01 \x01(\v2\x12.email.EmailConfigR\x06config\"\"\n" +
	"\x10GetConfigRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"A\n" +
	"\x13UpdateConfigRequest\x12*\n" +
	"\x06config\x18\x01 \x01(\v2\x12.email.EmailConfigR\x06config\"%\n" +
	"\x13DeleteConfigRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"J\n" +
	"\x14DeleteConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"p\n" +
	"\x0eConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x06config\x18\x03 \x01(\v2\x12.email.EmailConfigR\x06config\"B\n" +
	"\x12ListConfigsRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\x95\x01\n" +
	"\x13ListConfigsResponse\x12,\n" +
	"\aconfigs\x18\x01 \x03(\v2\x12.email.EmailConfigR\aconfigs\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\"?\n" +
	"\x11TestConfigRequest\x12*\n" +
	"\x06config\x18\x01 \x01(\v2\x12.email.EmailConfigR\x06config\"H\n" +
	"\x12TestConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"c\n" +
	"\x14GetSentEmailsRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"email_type\x18\x03 \x01(\tR\temailType\"\x8f\x01\n" +
	"\x15GetSentEmailsResponse\x12$\n" +
	"\x06emails\x18\x01 \x03(\v2\f.email.EmailR\x06emails\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\"S\n" +
	"\x10SendEmailRequest\x12\"\n" +
	"\x05email\x18\x01 \x01(\v2\f.email.EmailR\x05email\x12\x1b\n" +
	"\tconfig_id\x18\x02 \x01(\tR\bconfigId\"b\n" +
	"\x11SendEmailResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bemail_id\x18\x03 \x01(\tR\aemailId\"V\n" +
	"\x11SendEmailsRequest\x12$\n" +
	"\x06emails\x18\x01 \x03(\v2\f.email.EmailR\x06emails\x12\x1b\n" +
	"\tconfig_id\x18\x02 \x01(\tR\bconfigId\"e\n" +
	"\x12SendEmailsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\temail_ids\x18\x03 \x03(\tR\bemailIds2\xdd\x01\n" +
	"\fEmailService\x12J\n" +
	"\rGetSentEmails\x12\x1b.email.GetSentEmailsRequest\x1a\x1c.email.GetSentEmailsResponse\x12>\n" +
	"\tSendEmail\x12\x17.email.SendEmailRequest\x1a\x18.email.SendEmailResponse\x12A\n" +
	"\n" +
	"SendEmails\x12\x18.email.SendEmailsRequest\x1a\x19.email.SendEmailsResponse2\xa9\x03\n" +
	"\x12EmailConfigService\x12A\n" +
	"\fCreateConfig\x12\x1a.email.CreateConfigRequest\x1a\x15.email.ConfigResponse\x12;\n" +
	"\tGetConfig\x12\x17.email.GetConfigRequest\x1a\x15.email.ConfigResponse\x12A\n" +
	"\fUpdateConfig\x12\x1a.email.UpdateConfigRequest\x1a\x15.email.ConfigResponse\x12G\n" +
	"\fDeleteConfig\x12\x1a.email.DeleteConfigRequest\x1a\x1b.email.DeleteConfigResponse\x12D\n" +
	"\vListConfigs\x12\x19.email.ListConfigsRequest\x1a\x1a.email.ListConfigsResponse\x12A\n" +
	"\n" +
	"TestConfig\x12\x18.email.TestConfigRequest\x1a\x19.email.TestConfigResponseB\x17Z\x15proto/email_client_pbb\x06proto3"

var (
	file_proto_email_proto_rawDescOnce sync.Once
	file_proto_email_proto_rawDescData []byte
)

func file_proto_email_proto_rawDescGZIP() []byte {
	file_proto_email_proto_rawDescOnce.Do(func() {
		file_proto_email_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_email_proto_rawDesc), len(file_proto_email_proto_rawDesc)))
	})
	return file_proto_email_proto_rawDescData
}

var file_proto_email_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_email_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_email_proto_goTypes = []any{
	(EmailConfig_Protocol)(0),     // 0: email.EmailConfig.Protocol
	(*Attachment)(nil),            // 1: email.Attachment
	(*Email)(nil),                 // 2: email.Email
	(*EmailConfig)(nil),           // 3: email.EmailConfig
	(*CreateConfigRequest)(nil),   // 4: email.CreateConfigRequest
	(*GetConfigRequest)(nil),      // 5: email.GetConfigRequest
	(*UpdateConfigRequest)(nil),   // 6: email.UpdateConfigRequest
	(*DeleteConfigRequest)(nil),   // 7: email.DeleteConfigRequest
	(*DeleteConfigResponse)(nil),  // 8: email.DeleteConfigResponse
	(*ConfigResponse)(nil),        // 9: email.ConfigResponse
	(*ListConfigsRequest)(nil),    // 10: email.ListConfigsRequest
	(*ListConfigsResponse)(nil),   // 11: email.ListConfigsResponse
	(*TestConfigRequest)(nil),     // 12: email.TestConfigRequest
	(*TestConfigResponse)(nil),    // 13: email.TestConfigResponse
	(*GetSentEmailsRequest)(nil),  // 14: email.GetSentEmailsRequest
	(*GetSentEmailsResponse)(nil), // 15: email.GetSentEmailsResponse
	(*SendEmailRequest)(nil),      // 16: email.SendEmailRequest
	(*SendEmailResponse)(nil),     // 17: email.SendEmailResponse
	(*SendEmailsRequest)(nil),     // 18: email.SendEmailsRequest
	(*SendEmailsResponse)(nil),    // 19: email.SendEmailsResponse
	(*timestamppb.Timestamp)(nil), // 20: google.protobuf.Timestamp
}
var file_proto_email_proto_depIdxs = []int32{
	20, // 0: email.Email.sent_at:type_name -> google.protobuf.Timestamp
	1,  // 1: email.Email.attachments:type_name -> email.Attachment
	0,  // 2: email.EmailConfig.protocol:type_name -> email.EmailConfig.Protocol
	20, // 3: email.EmailConfig.created_at:type_name -> google.protobuf.Timestamp
	20, // 4: email.EmailConfig.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 5: email.CreateConfigRequest.config:type_name -> email.EmailConfig
	3,  // 6: email.UpdateConfigRequest.config:type_name -> email.EmailConfig
	3,  // 7: email.ConfigResponse.config:type_name -> email.EmailConfig
	3,  // 8: email.ListConfigsResponse.configs:type_name -> email.EmailConfig
	3,  // 9: email.TestConfigRequest.config:type_name -> email.EmailConfig
	2,  // 10: email.GetSentEmailsResponse.emails:type_name -> email.Email
	2,  // 11: email.SendEmailRequest.email:type_name -> email.Email
	2,  // 12: email.SendEmailsRequest.emails:type_name -> email.Email
	14, // 13: email.EmailService.GetSentEmails:input_type -> email.GetSentEmailsRequest
	16, // 14: email.EmailService.SendEmail:input_type -> email.SendEmailRequest
	18, // 15: email.EmailService.SendEmails:input_type -> email.SendEmailsRequest
	4,  // 16: email.EmailConfigService.CreateConfig:input_type -> email.CreateConfigRequest
	5,  // 17: email.EmailConfigService.GetConfig:input_type -> email.GetConfigRequest
	6,  // 18: email.EmailConfigService.UpdateConfig:input_type -> email.UpdateConfigRequest
	7,  // 19: email.EmailConfigService.DeleteConfig:input_type -> email.DeleteConfigRequest
	10, // 20: email.EmailConfigService.ListConfigs:input_type -> email.ListConfigsRequest
	12, // 21: email.EmailConfigService.TestConfig:input_type -> email.TestConfigRequest
	15, // 22: email.EmailService.GetSentEmails:output_type -> email.GetSentEmailsResponse
	17, // 23: email.EmailService.SendEmail:output_type -> email.SendEmailResponse
	19, // 24: email.EmailService.SendEmails:output_type -> email.SendEmailsResponse
	9,  // 25: email.EmailConfigService.CreateConfig:output_type -> email.ConfigResponse
	9,  // 26: email.EmailConfigService.GetConfig:output_type -> email.ConfigResponse
	9,  // 27: email.EmailConfigService.UpdateConfig:output_type -> email.ConfigResponse
	8,  // 28: email.EmailConfigService.DeleteConfig:output_type -> email.DeleteConfigResponse
	11, // 29: email.EmailConfigService.ListConfigs:output_type -> email.ListConfigsResponse
	13, // 30: email.EmailConfigService.TestConfig:output_type -> email.TestConfigResponse
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_email_proto_init() }
func file_proto_email_proto_init() {
	if File_proto_email_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_email_proto_rawDesc), len(file_proto_email_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_email_proto_goTypes,
		DependencyIndexes: file_proto_email_proto_depIdxs,
		EnumInfos:         file_proto_email_proto_enumTypes,
		MessageInfos:      file_proto_email_proto_msgTypes,
	}.Build()
	File_proto_email_proto = out.File
	file_proto_email_proto_goTypes = nil
	file_proto_email_proto_depIdxs = nil
}
